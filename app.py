
import streamlit as st
import google.generativeai as gen_ai
from PIL import Image  
from chat_bot import get_chatbot_response  

st.set_page_config(
    page_title="Nur Mohammad Rabbi | AI Assistant",
    page_icon="ü§ñ",
    layout="wide"  
)

# --- API ‡¶è‡¶¨‡¶Ç ‡¶°‡ßá‡¶ü‡¶æ ‡¶≤‡ßã‡¶°‡¶ø‡¶Ç ---
try:
    api_key = st.secrets["google_api_key"]
    personal_data = st.secrets["personal_data"]
    gen_ai.configure(api_key=api_key)
except KeyError as e:
    st.error(f"A required secret is missing! Please check your Streamlit Cloud settings. Missing key: {e}", icon="üö®")
    st.stop()
except Exception as e:
    st.error(f"An error occurred during API configuration: {e}", icon="üö®")
    st.stop()

# --- ‡¶∏‡¶æ‡¶á‡¶°‡¶¨‡¶æ‡¶∞ ---
with st.sidebar:
    # ‡¶Ü‡¶™‡¶®‡¶æ‡¶∞ ‡¶™‡ßç‡¶∞‡ßã‡¶´‡¶æ‡¶á‡¶≤ ‡¶õ‡¶¨‡¶ø‡¶ü‡¶ø ‡¶è‡¶ñ‡¶æ‡¶®‡ßá ‡¶≤‡ßã‡¶° ‡¶ï‡¶∞‡ßÅ‡¶®
    try:
        profile_image = Image.open('profile.jpg')
        st.image(profile_image, width=150)
    except FileNotFoundError:
        st.error("Profile image not found. Please add 'profile.jpg' to the root folder.")

    st.title("ü§ñ")

    st.markdown("---")
    st.markdown("### üîó Links")
    st.markdown("[LinkedIn](https://www.linkedin.com/in/nur-mohammad-rabbi-9a73931b6)")
    st.markdown("[GitHub](https://github.com/NurMohammad126641)")

    st.markdown("---")
    st.success("This app is live and fully functional!", icon="‚úÖ")

# --- ‡¶™‡ßç‡¶∞‡¶ß‡¶æ‡¶® ‡¶á‡¶®‡ßç‡¶ü‡¶æ‡¶∞‡¶´‡ßá‡¶∏ ---
st.title("ü§ñ AI Assistant")
st.markdown(
    "Welcome! I am a personal AI assistant trained on Nur Mohammad Rabbi's professional data. Feel free to ask me anything about Rabbi.")
st.markdown("---")

# ‡¶ö‡ßç‡¶Ø‡¶æ‡¶ü ‡¶á‡¶®‡ßç‡¶ü‡¶æ‡¶∞‡¶´‡ßá‡¶∏
user_question = st.text_input("üí¨ Ask your question here...", placeholder="e.g., What was his role at TallyKhata?")

if st.button("Get Answer", type="primary"):
    if user_question:
        with st.spinner("üß† Thinking..."):
            response = get_chatbot_response(user_question, personal_data)

            st.chat_message("user").write(user_question)
            st.chat_message("assistant").markdown(response)
    else:
        # ‡¶™‡ßç‡¶∞‡¶∂‡ßç‡¶® ‡¶®‡¶æ ‡¶≤‡¶ø‡¶ñ‡¶≤‡ßá ‡¶ì‡¶Ø‡¶º‡¶æ‡¶∞‡ßç‡¶®‡¶ø‡¶Ç ‡¶¶‡ßá‡¶ñ‡¶æ‡¶®‡ßã
        st.warning("Please enter a question first.", icon="‚ö†Ô∏è")
